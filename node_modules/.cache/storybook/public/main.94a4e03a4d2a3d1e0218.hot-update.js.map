{"version":3,"file":"main.94a4e03a4d2a3d1e0218.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA;AA4EA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AAJA;AA9FA","sources":["webpack://pappyweb_ui/./src/themeDefault.tsx"],"sourcesContent":["export const themeDefault = {\r\n  palette: {\r\n    mode: 'light',\r\n    common: {\r\n      black: '#000',\r\n      white: '#FFF'\r\n    },\r\n    primary: {\r\n      main: '#2d43e5',\r\n      light: '#4f65f7',\r\n      dark: '#0b21c3',\r\n      contrast: '#dddddd'\r\n    },\r\n    secondary: {\r\n      main: '',\r\n      light: '',\r\n      dark: '',\r\n      contrast: ''\r\n    },\r\n    error: {\r\n      main: '',\r\n      light: '',\r\n      dark: '',\r\n      contrast: ''\r\n    },\r\n    warning: {\r\n      main: '',\r\n      light: '',\r\n      dark: '',\r\n      contrast: ''\r\n    },\r\n    info: {\r\n      main: '',\r\n      light: '',\r\n      dark: '',\r\n      contrast: ''\r\n    },\r\n    success: {\r\n      main: '',\r\n      light: '',\r\n      dark: '',\r\n      contrast: ''\r\n    },\r\n    pastel: {\r\n      red:    { light: '#ffdddd', main: '#ffa8a8', dark: '#cf5656' },\r\n      orange: { light: '#fff0dd', main: '#ffdaa8', dark: '#cf9b56' },\r\n      yellow: { light: '#fffedd', main: '#fffda8', dark: '#cfcc56' },\r\n      green:  { light: '#cbebcd', main: '#88ce8c', dark: '#44a34a' },\r\n      blue:   { light: '#e5ebfb', main: '#b9c7ed', dark: '#8a9ed5' },\r\n      cyan:   { light: '#e2fbfb', main: '#b0e9e9', dark: '#7bcccc' },\r\n      purple: { light: '#f3e4fb', main: '#d9b6ed', dark: '#b885d5' },\r\n      mono:   { light: '#f7f7f7', main: '#dddddd', dark: '#c5c5c5' },\r\n    },\r\n    text: {\r\n      primary: 'rgba(0,0,0,0.87)',\r\n      secondary: 'rgba(0,0,0,0.6)',\r\n      disabled: 'rgba(0,0,0,0.12)'\r\n    },\r\n    background: {\r\n      paper: '#FFF',\r\n      default: '#FFF',\r\n    }, \r\n    getContrastText: (color: string) => {\r\n      if (color.indexOf('#') === 0) { color = color.slice(1) }\r\n      if (color.length === 3) { color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2] }\r\n      if (color.length !== 6) { throw new Error('Invalid HEX color.') }\r\n      var r = ( parseInt(color.substr(0, 2), 16));\r\n      var g = ( parseInt(color.substr(2, 2), 16));\r\n      var b = ( parseInt(color.substr(4, 2), 16));\r\n      var y = ((r * 299) + (g * 587) + (b * 114)) / 1000;\r\n      if ( y >= 128 ) {\r\n        return( '#111111')\r\n      } else {\r\n        return('#eeeeee')\r\n      }\r\n    }  \r\n  },\r\n  spacing: (spacing: number) => `${8 * spacing}px`,\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 700,\r\n    pxToRem: (size: number, htmlFontSize: number) => `${(size/htmlFontSize)}rem`,\r\n    h1: {\r\n      fontFamily: \"\",\r\n      fontWeight: 300,\r\n      fontSize: '6rem',\r\n      lineHeight: 1.167,\r\n      letterSpacing: '-0.01562em'\r\n    }\r\n  },\r\n  zIndex: {\r\n    appBar: 1100,\r\n    drawer: 1200,\r\n    modal: 1300,\r\n    tooltip: 1400,\r\n  }\r\n}"],"names":[],"sourceRoot":""}